name: Build, run & test

on: [push]

jobs:
        #  linux-clang-build-test:
        #
        #    runs-on: ubuntu-latest
        #
        #    env:
        #      QT_SELECT: qt5
        #
        #    steps:
        #    - uses: actions/checkout@v1
        #
        #    - name: install dependencies
        #      run: |
        #         sudo apt-get update
        #         sudo apt-get install clang-8 libqt5opengl5-dev libqt5svg5-dev libglvnd-dev libeigen3-dev zlib1g-dev libfftw3-dev 
        #
        #    - name: configure
        #      run: CFLAGS="-Werror" ./configure -assert || { cat configure.log; false; }
        #
        #    - name: build
        #      run: ./build -nowarnings -persistent -nopaginate || { cat build.log; false; }
        #
        #    - name: unit tests
        #      run: ./run_tests units || { cat testing_units.log; false; }
        #
        #    - name: binary tests
        #      run: ./run_tests binaries || { cat testing_binaries.log; false; }
        #
        #    - name: check command documentation
        #      run: ./docs/generate_user_docs.sh && git diff --exit-code docs/
        #
        #    - name: check configure with Python 3
        #      run: python3 ./configure || { cat configure.log; false; }
        #
        #    - name: check build with Python 3
        #      run: ./build -dryrun || { cat build.log; false; }
        #
        #
        #
        #
        #
        #
        #  linux-gcc-build:
        #
        #    runs-on: ubuntu-latest
        #
        #    env:
        #      QT_SELECT: qt5
        #
        #    steps:
        #    - uses: actions/checkout@v1
        #
        #    - name: install dependencies
        #      run: |
        #         sudo apt-get update
        #         sudo apt-get install g++-9 libqt5opengl5-dev libqt5svg5-dev libglvnd-dev libeigen3-dev zlib1g-dev libfftw3-dev 
        #
        #    - name: configure
        #      run: CFLAGS="-Werror" CXX=g++-9 ./configure -nooptim || { cat configure.log; false; }
        #
        #    - name: build
        #      run: ./build -nowarnings -persistent -nopaginate || { cat build.log; false; }
        #
        #
        #
        #
        #  macos-build:
        #
        #    runs-on: macos-latest
        #
        #    steps:
        #    - uses: actions/checkout@v1
        #
        #    - name: install dependencies
        #      run: |
        #         brew update
        #         brew install qt5 eigen pkg-config libtiff fftw libpng
        #         brew link --force qt5
        #
        #    - name: configure
        #      run: CFLAGS="-Werror" ./configure -nooptim || { cat configure.log; false; }
        #
        #    - name: build
        #      run: ./build -nowarnings -persistent -nopaginate || { cat build.log; false; }






  windows-build:

    runs-on: windows-latest

    env:
      CFLAGS: -Werror
      MSYSTEM: MINGW64
      MSYSCON: defterm
      CHERE_INVOKING: enabled_from_arguments
      MSYS2_NOSTART: yes

    steps:
    - uses: actions/checkout@v1

    - uses: numworks/setup-msys2@v1
      with:
        update: true

    - name: check PATH
      shell: cmd
      run: d:\a\_temp\msys\msys64\msys2_shell.cmd -c "echo $PATH"

    - name: install dependencies
      shell: cmd
      run: d:\a\_temp\msys\msys64\msys2_shell.cmd -c "pacman -S --noconfirm git python pkg-config mingw-w64-x86_64-gcc mingw-w64-x86_64-eigen3 mingw-w64-x86_64-qt5 mingw-w64-x86_64-fftw mingw-w64-x86_64-libtiff"

    - name: check pkg-config
      shell: cmd
      run: d:\a\_temp\msys\msys64\msys2_shell.cmd -c "pkg-config --debug --cflags eigen3"

    - name: configure
      shell: cmd
      run: d:\a\_temp\msys\msys64\msys2_shell.cmd -c "./configure -assert || { cat configure.log; false; }"

    - name: build
      shell: cmd
      run: d:\a\_temp\msys\msys64\msys2_shell.cmd -c "./build -nowarnings -persistent -nopaginate || { cat build.log; false; }"

    - name: unit tests
      shell: cmd
      run: d:\a\_temp\msys\msys64\msys2_shell.cmd -c "./run_tests units || { cat testing_units.log; false; }"

    - name: binary tests
      shell: cmd
      run: d:\a\_temp\msys\msys64\msys2_shell.cmd -c "./run_tests binaries || { cat testing_binaries.log; false; }"




      #  secondary-checks:
      #
      #    runs-on: ubuntu-latest
      #
      #    env:
      #      QT_SELECT: qt5
      #
      #    steps:
      #    - uses: actions/checkout@v1
      #
      #    - name: install dependencies
      #      run: |
      #         sudo apt-get update
      #         sudo apt-get install pylint pylint3 python3-sphinx sphinx-rtd-theme-common python3-recommonmark python3-sphinx-rtd-theme
      #
      #
      #    - name: check syntax
      #      run: ./check_syntax
      #
      #    - name: pylint (Python 2)
      #      run: |
      #         echo "__version__ = 'pylint testing' #pylint: disable=unused-variable" > ./lib/mrtrix3/_version.py
      #         PYTHON=python2 ./run_pylint
      #
      #    - name: pylint (Python 3)
      #      run: |
      #         echo "__version__ = 'pylint testing' #pylint: disable=unused-variable" > ./lib/mrtrix3/_version.py
      #         PYTHON=python3 ./run_pylint
      #
      #    - name: check building of documentation
      #      run: python3 -m sphinx -n -N -W -w sphinx.log docs/ tmp/

